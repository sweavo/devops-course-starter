#!/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

set -e
# run flake8 over the changed files
TMPDIR=.tmp_commit
function tidyup {
    rm -rf $TMPDIR
}
trap tidyup EXIT
mkdir -p $TMPDIR

git diff --cached --name-only --diff-filter=ACM | grep '.py$' | xargs git checkout-index --prefix=$TMPDIR/

if [[ $(find $TMPDIR/ -type f | wc -l) != "0" ]]
then
    echo "Info: running flake8"
    if ! poetry run flake8 $TMPDIR
    then
        echo "Fatal: please fix flake8 issues before commit."
        exit 1
    fi
fi

